[{"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\index.js":"1","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\reportWebVitals.js":"2","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\App.js":"3","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\components\\error-boundary\\error-boundary.component.jsx":"4","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\check-polling-units\\check-polling-units.component.jsx":"5","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\components\\loader\\loader.component.jsx":"6","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\components\\error-boundary\\error-boundary.styles.jsx":"7","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\components\\loader\\loader.styles.jsx":"8","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\check-polling-units\\check-polling-units.styles.jsx":"9","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\total-results\\total-results.component.jsx":"10","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\total-results\\total-results.styles.jsx":"11","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\new-polling-unit\\new-polling-unit.component.jsx":"12","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\new-polling-unit\\new-polling-unit.styles.jsx":"13","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\new-result\\new-result.component.jsx":"14","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\new-result\\new-result.styles.jsx":"15"},{"size":535,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1254,"mtime":1674808573844,"results":"19","hashOfConfig":"17"},{"size":955,"mtime":1674591951881,"results":"20","hashOfConfig":"17"},{"size":6378,"mtime":1675041154264,"results":"21","hashOfConfig":"17"},{"size":263,"mtime":1674592090196,"results":"22","hashOfConfig":"17"},{"size":548,"mtime":1674591911913,"results":"23","hashOfConfig":"17"},{"size":287,"mtime":1674592107593,"results":"24","hashOfConfig":"17"},{"size":2960,"mtime":1674840427388,"results":"25","hashOfConfig":"17"},{"size":3215,"mtime":1675039124737,"results":"26","hashOfConfig":"17"},{"size":2030,"mtime":1674839725686,"results":"27","hashOfConfig":"17"},{"size":7834,"mtime":1675039834733,"results":"28","hashOfConfig":"17"},{"size":3426,"mtime":1674840372707,"results":"29","hashOfConfig":"17"},{"size":4318,"mtime":1675038979450,"results":"30","hashOfConfig":"17"},{"size":2991,"mtime":1674840796004,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"taa18e",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\index.js",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\App.js",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\components\\error-boundary\\error-boundary.component.jsx",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\check-polling-units\\check-polling-units.component.jsx",["64","65"],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\components\\loader\\loader.component.jsx",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\components\\error-boundary\\error-boundary.styles.jsx",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\components\\loader\\loader.styles.jsx",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\check-polling-units\\check-polling-units.styles.jsx",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\total-results\\total-results.component.jsx",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\total-results\\total-results.styles.jsx",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\new-polling-unit\\new-polling-unit.component.jsx",["66","67","68"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { usePosition } from \"use-position\";\nimport { NewPollingUnitContainer } from \"./new-polling-unit.styles\";\n\nconst NewPollingUnit = () => {\n  const [lga, setLga] = useState([]);\n  const [wards, setWards] = useState([]);\n  const [created, setCreated] = useState(false);\n  const [pollingUnits, setPollingUnits] = useState([]);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const { latitude, longitude, timestamp } = usePosition();\n\n  const [ip, setIp] = useState();\n\n  const getIp = async () => {\n    const response = await fetch(\"https://ipapi.co/json/\");\n    const data = await response.json();\n    setIp(data.ip);\n  };\n\n  const defaultField = {\n    ward: 0,\n    lga: 0,\n    polling_unit_number: \"\",\n    polling_unit_name: \"\",\n    polling_unit_description: \"\",\n    entered_by_user: \"\",\n  };\n\n  const [credentials, setCredentials] = useState(defaultField);\n  const createPollingUnit = () => {\n    setLoading(true);\n    const userData = {\n      polling_unit_id: 88,\n      ward_id: credentials.ward,\n      lga_id: credentials.lga,\n      uniquewardid: 7,\n      polling_unit_number: credentials.polling_unit_number,\n      polling_unit_name: credentials.polling_unit_name,\n      polling_unit_description: credentials.polling_unit_description,\n      lat: latitude,\n      long: longitude,\n      entered_by_user: credentials.entered_by_user,\n      date_entered: \"2023-02-26 15:44:03\",\n      user_ip_address: ip,\n    };\n    console.log(userData);\n\n    axios\n      .post(\"https://energetic-hare-wig.cyclic.app/api/election/pollingunit\", userData)\n      .then(function (response) {\n        setCreated(true);\n        setLoading(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const getLga = () => {\n    axios\n      .get(\"https://energetic-hare-wig.cyclic.app/api/election/lga\")\n      .then(function (response) {\n        setLga(response.data.results);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const getWards = () => {\n    const data = {\n      lga_id: parseInt(credentials.lga),\n    };\n    axios\n      .post(\"https://energetic-hare-wig.cyclic.app/api/election/wards\", data)\n      .then(function (response) {\n        setWards(response.data.results);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const getPollingUnits = () => {\n    const data = {\n      polling_unit_id: 88,\n    };\n    axios\n      .post(\"https://energetic-hare-wig.cyclic.app/api/election/allpollingunits\", data)\n      .then(function (response) {\n        setPollingUnits(response.data.results);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const loadPage = (id) => {\n    window.location.href = `https://election-app-binmo.netlify.app/new/results?id=${id}`\n  };\n\n  const handleChange = (e) => {\n    setError(false);\n    const { name, value } = e.target;\n    setCredentials({ ...credentials, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (credentials.polling_unit_name === \"\") {\n      setError(true);\n      setErrorMessage({ polling_unit_name: \"Please fill out this field\" });\n      return;\n    }\n    if (credentials.polling_unit_number === \"\") {\n      setError(true);\n      setErrorMessage({ polling_unit_number: \"Please fill out this field\" });\n      return;\n    }\n    if (credentials.polling_unit_description === \"\") {\n      setError(true);\n      setErrorMessage({\n        polling_unit_description: \"Please fill out this field\",\n      });\n      return;\n    }\n\n    if (credentials.entered_by_user === \"\") {\n      setError(true);\n      setErrorMessage({ entered_by_user: \"Please fill out this field\" });\n      return;\n    }\n\n    createPollingUnit();\n    getPollingUnits();\n  };\n\n  useEffect(() => {\n    getLga();\n    getIp();\n    getPollingUnits();\n  }, []);\n\n  useEffect(() => {\n    getWards();\n  }, [credentials.lga]);\n\n  return (\n    <NewPollingUnitContainer>\n      <div className=\"container\">\n        <div className=\"heading\">Create New Polling Unit</div>\n        <div className=\"form-field\">\n          <div className=\"label\">Enter Polling Unit Name</div>\n          <input\n            className={error ? \"err-input\" : \"input\"}\n            name=\"polling_unit_name\"\n            type=\"text\"\n            onChange={handleChange}\n          />\n          {error ? (\n            <div className=\"err-text\">{errorMessage.polling_unit_name}</div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"form-field\">\n          <div className=\"label\">Enter Polling Unit Number</div>\n          <input\n            className={error ? \"err-input\" : \"input\"}\n            name=\"polling_unit_number\"\n            type=\"text\"\n            onChange={handleChange}\n          />\n\n          {error ? (\n            <div className=\"err-text\">{errorMessage.polling_unit_number}</div>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        <div className=\"form-field\">\n          <div className=\"label\">Enter Polling Unit Description</div>\n          <input\n            className={error ? \"err-input\" : \"input\"}\n            name=\"polling_unit_description\"\n            type=\"text\"\n            onChange={handleChange}\n          />\n          {error ? (\n            <div className=\"err-text\">\n              {errorMessage.polling_unit_description}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"form-field\">\n          <div className=\"label\">Name Of Offical</div>\n          <input\n            className={error ? \"err-input\" : \"input\"}\n            name=\"entered_by_user\"\n            type=\"text\"\n            onChange={handleChange}\n          />\n          {error ? (\n            <div className=\"err-text\">{errorMessage.entered_by_user}</div>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        <div className=\"form-field\">\n          <div className=\"label\">Select LGA</div>\n          <select\n            className=\"drop-down\"\n            name=\"lga\"\n            value={credentials.lga}\n            onChange={handleChange}\n          >\n            {lga.map((lg) => {\n              return (\n                <option key={lg.lga_id} value={lg.lga_id}>\n                  {lg.lga_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <div className=\"form-field\">\n          <div className=\"label-ward\">Select Ward</div>\n          <select\n            className=\"drop-down\"\n            name=\"ward\"\n            value={credentials.ward}\n            onChange={handleChange}\n          >\n            {wards.map((ward) => {\n              return (\n                <option key={ward.uniqueid} value={ward.ward_id}>\n                  {ward.ward_name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <button className=\"btn\" onClick={(e) => handleSubmit(e)}>\n          {loading ? \"loading...\" : \"Submit\"}\n        </button>\n\n        {pollingUnits.length > 0\n          ? pollingUnits.map((polUnit) => {\n              return (\n                <div className=\"polling-units\">\n                  <div className=\"name\">{polUnit.polling_unit_name}</div>\n                  <Link\n                    to={`/new/results?id=${polUnit.uniqueid}`}\n                    className=\"link\"\n                    onClick={() => loadPage(polUnit.uniqueid)}\n                  >\n                    Submit New Result\n                  </Link>\n                </div>\n              );\n            })\n          : \"\"}\n      </div>\n    </NewPollingUnitContainer>\n  );\n};\n\nexport default NewPollingUnit;\n","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\new-polling-unit\\new-polling-unit.styles.jsx",[],"C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\new-result\\new-result.component.jsx",["69"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"\nimport { NewResultContainer } from \"./new-result.styles\";\n\nconst NewResult = () => {\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [created, setCreated] = useState(false);\n  const [ip, setIp] = useState();\n\n  const history = useHistory()\n\n  const getIp = async () => {\n    const response = await fetch(\"https://ipapi.co/json/\");\n    const data = await response.json();\n    setIp(data.ip);\n  };\n\n  const parties = [\n    \"PDP\",\n    \"DPP\",\n    \"ACN\",\n    \"PPA\",\n    \"CDC\",\n    \"JP\",\n    \"ANPP\",\n    \"LABOUR\",\n    \"CPP\",\n  ];\n  const defaultField = {\n    party_abbreviation: \"\",\n    party_score: \"\",\n    entered_by_user: \"\",\n  };\n\n  const [credentials, setCredentials] = useState(defaultField);\n\n  const queryString = window.location.search;\n\n  const urlParams = new URLSearchParams(queryString);\n\n  const id = urlParams.get(\"id\");\n\n  const submitResult = () => {\n    setLoading(true);\n    const userData = {\n      polling_unit_uniqueid: id,\n      party_abbreviation: credentials.party_abbreviation,\n      party_score: parseInt(credentials.party_score),\n      entered_by_user: credentials.entered_by_user,\n      date_entered: \"2023-02-27 15:44:03\",\n      user_ip_address: ip,\n    };\n\n    axios\n      .post(\"https://energetic-hare-wig.cyclic.app/api/election/pollresults\", userData)\n      .then(function (response) {\n        setCreated(true);\n        setLoading(false); \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleChange = (e) => {\n    setError(false);\n    const { name, value } = e.target;\n    setCredentials({ ...credentials, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (credentials.party_score === \"\") {\n      setError(true);\n      setErrorMessage({ party_score: \"Please fill out this field\" });\n      return;\n    }\n    if (credentials.entered_by_user === \"\") {\n      setError(true);\n      setErrorMessage({ entered_by_user: \"Please fill out this field\" });\n      return;\n    }\n    submitResult();\n  };\n\n  useEffect(() => {\n    getIp();\n  }, []);\n\n  return (\n    <NewResultContainer>\n      <div className=\"container\">\n        <div className=\"container\">\n          <div className=\"heading\">Submit New Polling Unit Result</div>\n          <div className=\"form-field\">\n            <div className=\"label\">Select Party</div>\n            <select\n              className=\"drop-down\"\n              name=\"party_abbreviation\"\n              value={credentials.party_abbreviation}\n              onChange={handleChange}\n            >\n              {parties.map((party) => {\n                return (\n                  <option key={party} value={party}>\n                    {party}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-field\">\n            <div className=\"label\">Enter Score</div>\n            <input\n              className={error ? \"err-input\" : \"input\"}\n              name=\"party_score\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n\n            {error ? (\n              <div className=\"err-text\">{errorMessage.party_score}</div>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"form-field\">\n            <div className=\"label\">Official Name</div>\n            <input\n              className={error ? \"err-input\" : \"input\"}\n              name=\"entered_by_user\"\n              type=\"text\"\n              onChange={handleChange}\n            />\n\n            {error ? (\n              <div className=\"err-text\">{errorMessage.entered_by_user}</div>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <button className=\"btn\" onClick={(e) => handleSubmit(e)}>\n            {loading ? \"loading...\" : \"Submit\"}\n          </button>\n          \n          {\n            created ?\n          <div className=\"polling-units\">\n              Results has been recorded \n          </div>\n          :\n          ''\n          }\n\n\n        </div>\n      </div>\n    </NewResultContainer>\n  );\n};\n\nexport default NewResult;\n","C:\\Users\\ezeug\\Desktop\\dave's-projects\\election_resuts\\client\\src\\pages\\new-result\\new-result.styles.jsx",[],{"ruleId":"70","severity":1,"message":"71","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":50,"column":44,"nodeType":"76","messageId":"77","endLine":50,"endColumn":46},{"ruleId":"70","severity":1,"message":"78","line":10,"column":10,"nodeType":"72","messageId":"73","endLine":10,"endColumn":17},{"ruleId":"70","severity":1,"message":"79","line":16,"column":32,"nodeType":"72","messageId":"73","endLine":16,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":151,"column":6,"nodeType":"82","endLine":151,"endColumn":23,"suggestions":"83"},{"ruleId":"70","severity":1,"message":"84","line":13,"column":9,"nodeType":"72","messageId":"73","endLine":13,"endColumn":16},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'created' is assigned a value but never used.","'timestamp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWards'. Either include it or remove the dependency array.","ArrayExpression",["85"],"'history' is assigned a value but never used.",{"desc":"86","fix":"87"},"Update the dependencies array to be: [credentials.lga, getWards]",{"range":"88","text":"89"},[4104,4121],"[credentials.lga, getWards]"]